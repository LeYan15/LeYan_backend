# Generated by Django 3.2.18 on 2023-09-30 20:29

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="City",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "city_id",
                    models.CharField(max_length=100, verbose_name="id города"),
                ),
            ],
            options={
                "verbose_name": "Город",
                "verbose_name_plural": "Города",
            },
        ),
        migrations.CreateModel(
            name="Division",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "division_code_id",
                    models.CharField(
                        max_length=100, verbose_name="id дивизиона"
                    ),
                ),
            ],
            options={
                "verbose_name": "Подразделение",
                "verbose_name_plural": "Подразделения",
            },
        ),
        migrations.CreateModel(
            name="Format",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type_format_id",
                    models.IntegerField(verbose_name="id формата магазина"),
                ),
            ],
            options={
                "verbose_name": "Формат",
                "verbose_name_plural": "Форматы",
            },
        ),
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type_loc_id",
                    models.IntegerField(verbose_name="id локации магазина"),
                ),
            ],
            options={
                "verbose_name": "Локация",
                "verbose_name_plural": "Локации",
            },
        ),
        migrations.CreateModel(
            name="Size",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type_size_id",
                    models.IntegerField(
                        verbose_name="id типа размера магазина"
                    ),
                ),
            ],
            options={
                "verbose_name": "Размер",
                "verbose_name_plural": "Размеры",
            },
        ),
        migrations.CreateModel(
            name="Shop",
            fields=[
                (
                    "store",
                    models.CharField(
                        max_length=100,
                        primary_key=True,
                        serialize=False,
                        verbose_name="id магазина",
                    ),
                ),
                (
                    "is_active",
                    models.PositiveSmallIntegerField(
                        choices=[(0, "НЕТ"), (1, "ДА")],
                        verbose_name="флаг активного магазина",
                    ),
                ),
                (
                    "city",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="shops",
                        to="shop.city",
                    ),
                ),
                (
                    "division",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="shops",
                        to="shop.division",
                    ),
                ),
                (
                    "loc",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="shops",
                        to="shop.location",
                    ),
                ),
                (
                    "size",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="shops",
                        to="shop.size",
                    ),
                ),
                (
                    "type_format",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="shops",
                        to="shop.format",
                    ),
                ),
            ],
            options={
                "verbose_name": "Магазин",
                "verbose_name_plural": "Магазины",
            },
        ),
    ]
